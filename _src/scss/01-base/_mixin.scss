//  #MIXIN
// ==========================================================================

// Fluid font sizing
// --------------------------------------------------------
@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}

@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-font-size);
  $u4: unit($max-font-size);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      font-size: $min-font-size;
      @media screen and (min-width: $min-vw) {
        font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
      }
      @media screen and (min-width: $max-vw) {
        font-size: $max-font-size;
      }
    }
  }
}




// Media queries breakpoints
// --------------------------------------------------------

//use:
// @include mq(tablet)
@mixin mq($size) {
  @if $size == desktop {
    @media screen and (min-width: $desktop) {
      @content;
    }
  }
  @else if $size == laptop {
    @media screen and (min-width: $laptop) {
      @content;
    }
  }
  @else if $size == tablet {
    @media screen and (min-width: $tablet) {
      @content;
    }
  }
  @else if $size == phone {
    @media screen and (min-width: $phone) {
      @content;
    }
  }
  @else if $size == phoneonly {
    @media screen and (max-width: $tablet - 1px) {
      @content;
    }
  }
}



// mixin to easily create a grid
// --------------------------------------------------------

// Takes 3 arguments, one for each breakpoint
// Use: @include grid(1,3,4)

@mixin grid($col-small, $col-medium, $col-large) {
  display: grid;
  grid-template-columns: repeat($col-small, 1fr);

  @include mq(tablet) {
    grid-template-columns: repeat($col-medium, 1fr);
  }

  @include mq(laptop) {
    grid-template-columns: repeat($col-large, 1fr);
  }
}